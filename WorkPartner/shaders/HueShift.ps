// [신규 추가] WorkPartner/shaders/HueShift.ps
// HSL <-> RGB 변환 및 색조(Hue) 변경을 위한 픽셀 셰이더

sampler2D implicitInput : register(s0);
float hueShift : register(c0); // 0.0 ~ 1.0 (C#에서는 0~360을 0~1로 정규화)

float3 RgbToHsl(float3 color)
{
    float maxVal = max(color.r, max(color.g, color.b));
    float minVal = min(color.r, min(color.g, color.b));
    float h = 0.0, s = 0.0, l = (maxVal + minVal) / 2.0;

    if (maxVal == minVal)
    {
        h = s = 0.0; // achromatic
    }
    else
    {
        float d = maxVal - minVal;
        s = l > 0.5 ? d / (2.0 - maxVal - minVal) : d / (maxVal + minVal);
        if (maxVal == color.r)
        {
            h = (color.g - color.b) / d + (color.g < color.b ? 6.0 : 0.0);
        }
        else if (maxVal == color.g)
        {
            h = (color.b - color.r) / d + 2.0;
        }
        else // maxVal == color.b
        {
            h = (color.r - color.g) / d + 4.0;
        }
        h /= 6.0;
    }
    return float3(h, s, l);
}

float HueToRgb(float p, float q, float t)
{
    if (t < 0.0) t += 1.0;
    if (t > 1.0) t -= 1.0;
    if (t < 1.0 / 6.0) return p + (q - p) * 6.0 * t;
    if (t < 1.0 / 2.0) return q;
    if (t < 2.0 / 3.0) return p + (q - p) * (2.0 / 3.0 - t) * 6.0;
    return p;
}

float3 HslToRgb(float3 hsl)
{
    float r, g, b;
    float h = hsl.x, s = hsl.y, l = hsl.z;

    if (s == 0.0)
    {
        r = g = b = l; // achromatic
    }
    else
    {
        float q = l < 0.5 ? l * (1.0 + s) : l + s - l * s;
        float p = 2.0 * l - q;
        r = HueToRgb(p, q, h + 1.0 / 3.0);
        g = HueToRgb(p, q, h);
        b = HueToRgb(p, q, h - 1.0 / 3.0);
    }
    return float3(r, g, b);
}

float4 main(float2 uv : TEXCOORD) : COLOR
{
    float4 color = tex2D(implicitInput, uv);
    
    if (color.a > 0.0)
    {
        // 1. RGB -> HSL
        float3 hsl = RgbToHsl(color.rgb);
        
        // 2. Hue Shift (색조 변경)
        hsl.x += hueShift;
        hsl.x = frac(hsl.x); // 0.0 ~ 1.0 범위 유지
        
        // 3. HSL -> RGB
        color.rgb = HslToRgb(hsl);
    }
    
    return color;
}